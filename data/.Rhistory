geom_vline(xintercept = 3, linetype = 2)
set.seed(123)
# Compute and plot wss for k = 2 to k = 10
k.max <- 10 # Maximal number of clusters
data <- reboston_scaled
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 1, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares", main = "The amount of clusters")
abline(v = 3, lty =2)
# Another way, same method
library(factoextra); require(ggplot2)
fviz_nbclust(reboston_scaled, kmeans, method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
set.seed(123)
# Compute and plot wss for k = 2 to k = 10
k.max <- 10 # Maximal number of clusters
data <- reboston_scaled
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10 )$tot.withinss})
plot1 <- plot(1:k.max, wss,
type="b", pch = 1, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares", main = "The amount of clusters")
abline(v = 3, lty =2)
# Another way, same method
library(factoextra); require(ggplot2)
plot2 <- fviz_nbclust(reboston_scaled, kmeans, method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
library(gridExtra)
grid.arrange(plot1, plot2, ncol=2, nrow =2)
set.seed(123)
# Compute and plot wss for k = 2 to k = 10
k.max <- 10 # Maximal number of clusters
data <- reboston_scaled
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10 )$tot.withinss})
plot1 <- plot(1:k.max, wss,
type="b", pch = 1, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares", main = "The amount of clusters")
abline(v = 3, lty =2)
# Another way, same method
library(factoextra); require(ggplot2)
plot2 <- fviz_nbclust(reboston_scaled, kmeans, method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
plot1
plot2
set.seed(123)
# Compute and plot wss for k = 2 to k = 10
k.max <- 10 # Maximal number of clusters
data <- reboston_scaled
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10 )$tot.withinss})
plot1 <- plot(1:k.max, wss,
type="b", pch = 1, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares", main = "The amount of clusters")
abline(v = 3, lty =2)
# Another way, same method
library(factoextra); require(ggplot2)
plot2 <- fviz_nbclust(reboston_scaled, kmeans, method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
library(gridExtra)
grid.arrange(plot1, plot2, nrow =2)
set.seed(123)
# Compute and plot wss for k = 2 to k = 10
k.max <- 10 # Maximal number of clusters
data <- reboston_scaled
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 1, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares", main = "The amount of clusters")
abline(v = 3, lty =2)
# Another way, same method
library(factoextra); require(ggplot2)
fviz_nbclust(reboston_scaled, kmeans, method = "wss") +
geom_vline(xintercept = 3, linetype = 2)
library(dygraphs)
km_eu <- kmeans(dist_eu, centers = 2)
pairs(reboston_scaled, col = km_eu$cluster, main = "Pairs with 2 clusters")
km_eu2 <- kmeans(dist_eu, centers = 4)
pairs(reboston_scaled, col = km_eu2$cluster, main = "Pairs with 4 clusters")
set.seed(123)
km_eu3 <- kmeans(dist_eu, centers = 3)
pairs(reboston_scaled, col = km_eu3$cluster, main = "Pairs with 3 clusters")
km_eu4 <- kmeans(dist_eu, centers = 5)
pairs(reboston_scaled, col = km_eu4$cluster, main = "Pairs with 5 clusters")
set.seed(123)
km_eu3 <- kmeans(dist_eu, centers = 3)
pairs(reboston_scaled, col = km_eu3$cluster, main = "Pairs with 3 clusters")
km_eu4 <- kmeans(dist_eu, centers = 5)
pairs(reboston_scaled, col = km_eu4$cluster, main = "Pairs with 5 clusters")
library(NbClust)
nb <- NbClust(reboston_scaled, distance = "euclidean", min.nc = 2,
max.nc = 10, method = "complete", index ="all")
nb
fviz_nbclust(nb) + theme_minimal()
set.seed(123) # keeping the results same
k_max <- 10 # maximum number of clusters
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b', main = "Number of clusters")
set.seed(123) # keeping the results same
k_max <- 10 # maximum number of clusters
twcss <- sapply(1:k_max, function(k){kmeans(dist_eu, k)$tot.withinss})
plot(1:k_max, twcss, type='b', main = "Number of proposed clusters")
set.seed(123)
# Compute and plot wss for k = 2 to k = 10
k.max <- 10 # Maximal number of clusters
data <- reboston_scaled
wss <- sapply(1:k.max,
function(k){kmeans(data, k, nstart=10 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 1, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares", main = "The amount of clusters")
abline(v = 2, lty =2)
# Another way, same method
library(factoextra); require(ggplot2)
fviz_nbclust(reboston_scaled, kmeans, method = "wss") +
geom_vline(xintercept = 5, linetype = 2)
set.seed(123)
km_eu3 <- kmeans(dist_eu, centers = 3)
pairs(reboston_scaled, col = km_eu3$cluster, main = "Pairs with 3 clusters")
library(dygraphs)
km_eu <- kmeans(dist_eu, centers = 2)
pairs(reboston_scaled, col = km_eu$cluster, main = "Pairs with 2 clusters")
km_eu
km_eu2 <- kmeans(dist_eu, centers = 4)
pairs(reboston_scaled, col = km_eu2$cluster, main = "Pairs with 4 clusters")
km_eu2
library(dygraphs)
km_eu <- kmeans(dist_eu, centers = 2)
pairs(reboston_scaled, col = km_eu$cluster, main = "Pairs with 2 clusters")
km_eu2 <- kmeans(dist_eu, centers = 4)
pairs(reboston_scaled, col = km_eu2$cluster, main = "Pairs with 4 clusters")
# Lets plot the pairs with two centers again
km_eu
# Lets plot the pairs with two centers again
library(dygraphs)
pairs(reboston_scaled, col = km_eu$cluster, main = "Pairs with 2 clusters")
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd) # 195 observations and 8 variables: 2 integers, 2 character and 4 numeric (continous) variables
dim(hd) # Same values than above
summary(hd) # There are some missing values
table(is.na(hd)) # 14 missing values
str(gii) # 195 observations and 10 variables: 2 integers, 1 character and 7 numeric (continuous) variables
summary(gii) # There are some missing values
table(is.na(gii)) # 132 missing values
colnames(hd) # Printing just the column names
library(dplyr)
hdnew <- rename(hd, HDI_rank = HDI.Rank,
country = Country,
HDI_index = Human.Development.Index..HDI.,
Elife = Life.Expectancy.at.Birth,
Eedu = Expected.Years.of.Education,
Medu = Mean.Years.of.Education,
GNIpc = Gross.National.Income..GNI..per.Capita,
GH_rank = GNI.per.Capita.Rank.Minus.HDI.Rank)
colnames(hd) # Verifying the column names
colnames(hdnew) # Verifying the column names
colnames(gii) # Printing just the column names
giinew <- rename(gii,
GII_rank = GII.Rank,
country = Country,
GII_index = Gender.Inequality.Index..GII.,
mort_ratio = Maternal.Mortality.Ratio,
ad_birth = Adolescent.Birth.Rate,
seats = Percent.Representation.in.Parliament,
SFedu = Population.with.Secondary.Education..Female.,
SMedu = Population.with.Secondary.Education..Male.,
Flabour = Labour.Force.Participation.Rate..Female.,
Mlabour = Labour.Force.Participation.Rate..Male.)
colnames(giinew) # Verifying the column names
giinew <- mutate(giinew, SFM_edu = SFedu / SMedu, FMlabour = Flabour / Mlabour)
colnames(giinew)
join_by <- c("country")
human <- inner_join(hdnew, giinew, by = c(join_by), suffix = c(".hdnew", ".giinew"))
colnames(human)
glimpse(human) # 195 observations and 19 variables
getwd()
setwd("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data")
getwd()
str(human)
library(tidyr); library(stringr)
str(human$GNIpc)
str_replace(human$GNIpc, pattern = ",", replace = "")
str_replace(human$GNIpc, pattern = ",", replace = "") %>% as.numeric(human$GNIpc)
keep <- c("country", "SFM_edu", "FMlabour", "Eedu", "Elife", "GNIpc", "mort_ratio", "ad_birth", "seats")
human <- select(human, one_of(keep))
str(human)
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
str(human$GNIpc)
str_replace(human$GNIpc, pattern = ",", replace = "") %>% as.numeric(human$GNIpc)
keep <- c("country", "SFM_edu", "FMlabour", "Eedu", "Elife", "GNIpc", "mort_ratio", "ad_birth", "seats")
human <- select(human, one_of(keep))
str(human) # Verifying the content: 195 observation and 9 variables
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human)) # TRUE are the complete cases without NA:s
str(human)
str(human) # Verifying the content: 195 observation and 9 variables
str_replace(human$GNIpc, pattern = ",", replace ="") %>% as.numeric(human$GNIpc)
str(human) # Verifying the content: 195 observation and 9 variables
str_replace(human$GNIpc, pattern = ",", replace ="") %>% GNIpc <- as.numeric(human$GNIpc)
GNIpc <- str_replace(human$GNIpc, pattern = ",", replace ="") %>% as.numeric(human$GNIpc)
keep <- c("country", "SFM_edu", "FMlabour", "Eedu", "Elife", "GNIpc", "mort_ratio", "ad_birth", "seats")
human <- select(human, one_of(keep))
str(human) # Verifying the content: 195 observation and 9 variables
str(GNIpc)
str(human) # Verifying the content: 195 observation and 9 variables
GNIpc <- human$GNIpc
str(GNIpc)
str_replace(human$GNIpc, pattern= ",", replace="")
str_replace(human$GNIpc, pattern= ",", replace="") %>% as.numeric(human$GNIpc)
str(GNIpc)
str(human$GNIpc)
GNIpc <- human$GNIpc %>% as.numeric(human$GNIpc)
GNIpc <- as.numeric(human$GNIpc)
str(GNIpc)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd) # 195 observations and 8 variables: 2 integers, 2 character and 4 numeric (continous) variables
dim(hd) # Same values than above
summary(hd) # There are some missing values
table(is.na(hd)) # 14 missing values
str(gii) # 195 observations and 10 variables: 2 integers, 1 character and 7 numeric (continuous) variables
summary(gii) # There are some missing values
colnames(hd) # Printing just the column names
hdnew <- rename(hdnew, HDI_rank = HDI.Rank,
country = Country,
HDI_index = Human.Development.Index..HDI.,
Elife = Life.Expectancy.at.Birth,
Eedu = Expected.Years.of.Education,
Medu = Mean.Years.of.Education,
GNIpc = Gross.National.Income..GNI..per.Capita,
GH_rank = GNI.per.Capita.Rank.Minus.HDI.Rank)
hdnew <- rename(hd, HDI_rank = HDI.Rank,
country = Country,
HDI_index = Human.Development.Index..HDI.,
Elife = Life.Expectancy.at.Birth,
Eedu = Expected.Years.of.Education,
Medu = Mean.Years.of.Education,
GNIpc = Gross.National.Income..GNI..per.Capita,
GH_rank = GNI.per.Capita.Rank.Minus.HDI.Rank)
colnames(hdnew) # Verifying the column names
colnames(gii) # Printing just the column names
giinew <- rename(gii,
GII_rank = GII.Rank,
country = Country,
GII_index = Gender.Inequality.Index..GII.,
mort_ratio = Maternal.Mortality.Ratio,
ad_birth = Adolescent.Birth.Rate,
seats = Percent.Representation.in.Parliament,
SFedu = Population.with.Secondary.Education..Female.,
SMedu = Population.with.Secondary.Education..Male.,
Flabour = Labour.Force.Participation.Rate..Female.,
Mlabour = Labour.Force.Participation.Rate..Male.)
colnames(giinew) # Verifying the column names
giinew <- mutate(giinew, SFM_edu = SFedu / SMedu, FMlabour = Flabour / Mlabour)
colnames(giinew)
join_by <- c("country")
human <- inner_join(hdnew, giinew, by = c(join_by), suffix = c(".hdnew", ".giinew"))
colnames(human)
str(human)
setwd("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data")
getwd()
library(tidyr)
library(stringr)
str(human$GNIpc)
str_replace(human$GNIpc, pattern= ",", replace="") %>% as.numeric(human$GNIpc)
keep <- c("country", "SFM_edu", "FMlabour", "Eedu", "Elife", "GNIpc", "mort_ratio", "ad_birth", "seats")
library(dplyr)
human <- select(human, one_of(keep))
str(human) # Verifying the content: 195 observation and 9 variables
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human)) # TRUE are the complete cases without NA:s
str_replace(human$GNIpc, pattern= ",", replace="") %>% as.numeric(human$GNIpc)
str(human)
str(human$GNIpc)
human <- str_replace(human$GNIpc, pattern= ",", replace="")
str(human$GNIpc)
GNIpc <- str_replace(human$GNIpc, pattern= ",", replace="")
colnames(human)
human <- inner_join(hdnew, giinew, by = c(join_by), suffix = c(".hdnew", ".giinew"))
colnames(human)
getwd()
str(human$GNIpc)
GNIpc <- str_replace(human$GNIpc, pattern= ",", replace="")
str(human$GNIpc)
human$GNIpc <- str_replace(human$GNIpc, pattern= ",", replace="")
str(human$GNIpc)
human$GNIpc <- str_replace(human$GNIpc, pattern= ",", replace="") %>% as.numeric(human$GNIpc)
str(human$GNIpc)
keep <- c("country", "SFM_edu", "FMlabour", "Eedu", "Elife", "GNIpc", "mort_ratio", "ad_birth", "seats")
human <- select(human, one_of(keep))
str(human) # Verifying the content: 195 observation and 9 variables
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human)) # TRUE are the complete cases without NA:s
str(human)
human_ <- filter(human, comp == TRUE)
complete.cases(human)
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human)) # TRUE are the complete cases without NA:s
str(human)
human_ <- filter(human, comp == TRUE)
comp <- complete.cases(human)
data.frame(human[-1], comp = complete.cases(human)) # TRUE are the complete cases without NA:s
human <- data.frame(human[-1], comp = complete.cases(human)) # TRUE are the complete cases without NA:s
str(human)
human_ <- filter(human, comp == TRUE)
complete.cases(human_)
str(human_)
str(human)
complete.cases(human)
comp <- complete.cases(human)
data.frame(human[-1], comp = complete.cases(human)) # TRUE are the complete cases without NA:s
human_ <- filter(human, comp == TRUE)
str(human_) #
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd) # 195 observations and 8 variables: 2 integers, 2 character and 4 numeric (continous) variables
dim(hd) # Same values than above
summary(hd) # There are some missing values
str(gii) # 195 observations and 10 variables: 2 integers, 1 character and 7 numeric (continuous) variables
summary(gii) # There are some missing values
colnames(hd) # Printing just the column names
hdnew <- rename(hd, HDI_rank = HDI.Rank,
country = Country,
HDI_index = Human.Development.Index..HDI.,
Elife = Life.Expectancy.at.Birth,
Eedu = Expected.Years.of.Education,
Medu = Mean.Years.of.Education,
GNIpc = Gross.National.Income..GNI..per.Capita,
GH_rank = GNI.per.Capita.Rank.Minus.HDI.Rank)
colnames(hdnew) # Verifying the column names
colnames(gii) # Printing just the column names
giinew <- rename(gii,
GII_rank = GII.Rank,
country = Country,
GII_index = Gender.Inequality.Index..GII.,
mort_ratio = Maternal.Mortality.Ratio,
ad_birth = Adolescent.Birth.Rate,
seats = Percent.Representation.in.Parliament,
SFedu = Population.with.Secondary.Education..Female.,
SMedu = Population.with.Secondary.Education..Male.,
Flabour = Labour.Force.Participation.Rate..Female.,
Mlabour = Labour.Force.Participation.Rate..Male.)
colnames(giinew) # Verifying the column names
giinew <- mutate(giinew, SFM_edu = SFedu / SMedu, FMlabour = Flabour / Mlabour)
colnames(giinew)
join_by <- c("country")
human <- inner_join(hdnew, giinew, by = c(join_by), suffix = c(".hdnew", ".giinew"))
colnames(human)
glimpse(human) # 195 observations and 19 variables
str(human)
setwd("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data")
getwd()
str(human$GNIpc)
human$GNIpc <- str_replace(human$GNIpc, pattern= ",", replace="") %>% as.numeric(human$GNIpc)
str(human$GNIpc)
keep <- c("country", "SFM_edu", "FMlabour", "Eedu", "Elife", "GNIpc", "mort_ratio", "ad_birth", "seats")
human <- select(human, one_of(keep))
str(human) # Verifying the content: 195 observation and 9 variables
complete.cases(human)
comp <- complete.cases(human)
data.frame(human[-1], comp = complete.cases(human)) # TRUE are the complete cases without NA:s
str(human)
human_ <- filter(human, comp == TRUE)
str(human_) #
str(human_$country)
tail(human, 20)
tail(human_, 20)
last <- nrow(human_) - 7
human_ <- human_[1:last,]
tail(human_, 10)
rownames(human_) <- human_$country
str(human_)
write.csv(human_, file = "human_1.csv", row.names = TRUE)
human_1 <- read.csv("human_1.csv")
str(human_1)
colnames(human_)
human_ <- dplyr::select(human_, -country)
write.csv(human_, file = "human_1.csv", row.names = TRUE)
human_1 <- read.csv("human_1.csv")
str(human_1)
human_1 <- read.csv2(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv", row.names = TRUE, header = TRUE))
library(tidyr); library(readr)
human_1 <- read.csv2(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv", row.names = TRUE, header = TRUE))
library(tidyr); library(readr)
human_1 <- read.csv(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv", row.names = TRUE, header = TRUE))
library(tidyr); library(readr)
human_1 <- read.csv(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"))
str(human_1)
human_2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep = ",", header = TRUE)
str(human_2)
library(tidyr); library(readr)
human_1 <- read.csv(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE)
str(human_1)
library(tidyr); library(readr)
human_1 <- read.csv(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, col.names = TRUE)
library(tidyr); library(readr)
human_1 <- read.csv(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE)
str(human_1)
library(tidyr); library(readr)
human_1 <- read.csv2(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE)
str(human_1)
library(tidyr); library(readr)
human_1 <- read.csv2(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"))
str(human_1)
library(tidyr); library(readr)
human_1 <- read.csv2(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), row.names = TRUE)
library(tidyr); library(readr)
human_1 <- read.csv2(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"))
str(human_1)
library(tidyr); library(readr)
human_1 <- read.csv2(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE)
str(human_1)
library(tidyr); library(readr)
human_1 <- read.csv(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE)
str(human_1)
write.csv(human_, file = "human_1.csv", row.names = TRUE, header = TRUE)
write.csv(human_, file = "human_1.csv")
human_1 <- read.csv("human_1.csv")
str(human_1) # 155 observations and 9 variables
library(tidyr); library(readr)
human_1 <- read.csv(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, row.names = TRUE)
library(tidyr); library(readr)
human_1 <- read.csv(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE)
str(human_1)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, row.names = TRUE)
write.csv(human_, file = "human_1.csv", row.names = TRUE, header)
write.csv(human_, file = "human_1.csv", row.names = TRUE)
human_1 <- read.csv("human_1.csv")
str(human_1) # 155 observations and 9 variables
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, row.names = TRUE)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), row.names = TRUE)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE)
str(human_1)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, sep = ",")
str(human_1)
rownames(human_)
colnames(human_)
colnames(human_1)
rownames(human_1)
rownames(human_)
colnames(human_)
write.csv(human_, file = "human_1.csv")
human_1 <- read.csv("human_1.csv")
str(human_1) # 155 observations and 9 variables
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, sep = ";")
str(human_1)
colnames(human_1)
rownames(human_1)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, row.names = TRUE, sep = ";")
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, row.names, sep = ",")
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, row.names)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE)
str(human_1)
colnames(human_1)
rownames(human_1)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, sep = ",")
str(human_1)
colnames(human_1)
rownames(human_1)
write.csv(human_, file = "human_1.csv", row.names = FALSE)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.csv"), header = TRUE, sep = ",", row.names = FALSE)
write.csv(human_, file = "human_1.csv")
human_1 <- read.csv("human_1.csv", row.names = FALSE)
write.csv(human_, file = "human_1.csv", row.names = FALSE)
write.csv(human_, file = "human_1.csv", row.names = TRUE)
write.table(human_, file = "human_1.txt", row.names = TRUE)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.txt"), header = TRUE, sep = ",")
str(human_1)
colnames(human_1)
rownames(human_1)
library(tidyr); library(readr)
human_1 <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.txt"), header = TRUE)
str(human_1)
colnames(human_1)
rownames(human_1)
human_2 <- read.table("human_1.txt", header = TRUE)
str(human_2)
colnames(human_2)
rownames(human_2)
colnames(human_2)
human_net <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep = ",", header = TRUE)
str(human_net)
colnames(human_net)
rownames(human_net)
library(tidyr); library(readr)
human_own <- read.table(file.path("C:/Users/heidi/Documents/YLIOPISTO/TILASTOTIEDE/INTRODUCTION TO OPEN DATA SCIENCE/IODS-project/data", "human_1.txt"), header = TRUE)
str(human_own)
colnames(human_own)
rownames(human_own) # veryfying that country is a rowname
